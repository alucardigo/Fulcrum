version: "3.8"

services:
  # Serviço da API (Backend NestJS)
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: fulcrum_api
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "9100:9100" # Porta para métricas Prometheus (alterada para evitar conflito)
    env_file:
      - ./apps/api/.env
    environment:
      DATABASE_URL: "mysql://fulcrum_user:fulcrum_password@db:3306/fulcrumdb"
      JWT_SECRET: "${JWT_SECRET:-default_jwt_secret_for_dev}"
      API_PORT: 3001
      REDIS_HOST: redis
      REDIS_PORT: 6379
      METRICS_PORT: 9100
      NODE_ENV: development
    volumes:
      - ./logs/api:/usr/src/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fulcrum_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Serviço do Frontend (Next.js)
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: fulcrum_web
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - ./apps/web/.env.local
    environment:
      NEXT_PUBLIC_API_BASE_URL: "http://api:3001"
      NODE_ENV: development
    depends_on:
      api:
        condition: service_healthy
    networks:
      - fulcrum_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Banco de dados MySQL
  db:
    image: mysql:8.0
    container_name: fulcrum_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-root_password}"
      MYSQL_DATABASE: fulcrumdb
      MYSQL_USER: fulcrum_user
      MYSQL_PASSWORD: "${MYSQL_PASSWORD:-fulcrum_password}"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - fulcrum_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: fulcrum_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    networks:
      - fulcrum_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # Prometheus para métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: fulcrum_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./apps/api/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - fulcrum_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Grafana para visualização de métricas
  grafana:
    image: grafana/grafana:latest
    container_name: fulcrum_grafana
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - fulcrum_network
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  fulcrum_network:
    driver: bridge

volumes:
  db_data:
  redis_data:
  prometheus_data:
  grafana_data:
